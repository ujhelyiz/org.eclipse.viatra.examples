<?xml version="1.0" encoding="UTF-8"?>
<setup:Project
    xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:git="http://www.eclipse.org/oomph/setup/git/1.0"
    xmlns:jdt="http://www.eclipse.org/oomph/setup/jdt/1.0"
    xmlns:mylyn="http://www.eclipse.org/oomph/setup/mylyn/1.0"
    xmlns:predicates="http://www.eclipse.org/oomph/predicates/1.0"
    xmlns:projects="http://www.eclipse.org/oomph/setup/projects/1.0"
    xmlns:setup="http://www.eclipse.org/oomph/setup/1.0"
    xmlns:setup.p2="http://www.eclipse.org/oomph/setup/p2/1.0"
    xmlns:setup.targlets="http://www.eclipse.org/oomph/setup/targlets/1.0"
    xmlns:setup.workingsets="http://www.eclipse.org/oomph/setup/workingsets/1.0"
    xsi:schemaLocation="http://www.eclipse.org/oomph/setup/git/1.0 http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/plain/setups/models/Git.ecore http://www.eclipse.org/oomph/setup/jdt/1.0 http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/plain/setups/models/JDT.ecore http://www.eclipse.org/oomph/setup/mylyn/1.0 http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/plain/setups/models/Mylyn.ecore http://www.eclipse.org/oomph/predicates/1.0 http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/plain/setups/models/Predicates.ecore http://www.eclipse.org/oomph/setup/projects/1.0 http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/plain/setups/models/Projects.ecore http://www.eclipse.org/oomph/setup/targlets/1.0 http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/plain/setups/models/SetupTarglets.ecore http://www.eclipse.org/oomph/setup/workingsets/1.0 http://git.eclipse.org/c/oomph/org.eclipse.oomph.git/plain/setups/models/SetupWorkingSets.ecore"
    name="viatra.cps.demo"
    label="VIATRA CPS Demo">
  <setupTask
      xsi:type="jdt:JRETask"
      version="JavaSE-1.7"
      location="${jre.location-1.7}"/>
  <setupTask
      xsi:type="git:GitCloneTask"
      id="git.clone.cps"
      remoteURI="IncQueryLabs/incquery-examples-cps">
    <annotation
        source="http://www.eclipse.org/oomph/setup/InducedChoices">
      <detail
          key="inherit">
        <value>github.remoteURIs</value>
      </detail>
      <detail
          key="label">
        <value>${scope.project.label} Github repository</value>
      </detail>
      <detail
          key="target">
        <value>remoteURI</value>
      </detail>
    </annotation>
    <description>${scope.project.label}</description>
  </setupTask>
  <setupTask
      xsi:type="setup.p2:P2Task"
      label="Demo">
    <requirement
        name="org.eclipse.viatra.query.sdk.feature.source.feature.group"
        versionRange="[1.2.0,2.0.0)"/>
    <requirement
        name="org.eclipse.viatra.query.testing.sdk.feature.feature.group"/>
    <requirement
        name="org.eclipse.viatra.addon.viewers.tooling.feature.feature.group"
        versionRange="[0.13.0,0.14.0)"/>
    <requirement
        name="org.eclipse.xtext.sdk.feature.group"
        versionRange="[2.9.0,2.10.0)"/>
    <requirement
        name="org.eclipse.gef4.geometry.feature.group"/>
    <requirement
        name="org.eclipse.gef4.zest.sdk.feature.group"
        filter=""/>
    <requirement
        name="org.eclipse.viatra.query.tooling.ui.visualization.feature.feature.group"/>
    <requirement
        name="com.google.inject.multibindings"
        versionRange="[3.0.0,4.0.0)"/>
    <requirement
        name="org.eclipse.viatra.transformation.runtime.emf.feature.feature.group"
        versionRange="[1.2.0,2.0.0)"/>
    <requirement
        name="org.eclipse.viatra.integration.mwe2.feature.feature.group"
        versionRange="[0.13.0,0.14.0)"/>
    <repository
        url="http://download.eclipse.org/viatra/dependency"/>
    <repository
        url="http://download.eclipse.org/viatra/updates/integration"/>
  </setupTask>
  <setupTask
      xsi:type="setup.targlets:TargletTask">
    <targlet
        name="Demo Targlet Platform">
      <annotation
          source="http:/www.eclipse.org/oomph/targlets/TargetDefinitionGenerator">
        <detail
            key="location">
          <value>${git.clone.cps.location/releng/org.eclipse.viatra.examples.cps.target/cps-demonstrator_oomphgen.target}</value>
        </detail>
        <detail
            key="includeAllPlatforms">
          <value>false</value>
        </detail>
        <detail
            key="includeSource">
          <value>false</value>
        </detail>
        <detail
            key="generateVersions">
          <value>true</value>
        </detail>
      </annotation>
      <requirement
          name="org.eclipse.equinox.sdk.feature.group"/>
      <requirement
          name="org.eclipse.sdk.feature.group"/>
      <requirement
          name="org.eclipse.xtext.sdk.feature.group"
          versionRange="[2.9.0,2.10.0)"/>
      <requirement
          name="org.eclipse.emf.sdk.feature.group"
          versionRange="[2.9.0,3.0.0)"/>
      <requirement
          name="org.eclipse.gef4.zest.sdk.feature.group"
          versionRange="[0.1.0.201406280202,0.1.0.201406280202]"/>
      <requirement
          name="org.eclipse.gef4.geometry.feature.group"/>
      <requirement
          name="com.google.inject.multibindings"
          versionRange="[3.0.0,4.0.0)"/>
      <requirement
          name="org.eclipse.viatra.transformation.runtime.emf.feature.feature.group"
          versionRange="[1.2.0,2.0.0)"/>
      <requirement
          name="org.eclipse.viatra.integration.mwe2.feature.feature.group"
          versionRange="[0.13.0,0.14.0)"/>
      <requirement
          name="org.eclipse.viatra.query.sdk.feature.source.feature.group"
          versionRange="[1.2.0,2.0.0)"/>
      <requirement
          name="org.eclipse.viatra.query.testing.sdk.feature.feature.group"/>
      <requirement
          name="org.eclipse.viatra.query.tooling.ui.visualization.feature.feature.group"/>
      <requirement
          name="org.eclipse.viatra.addon.viewers.tooling.feature.feature.group"
          versionRange="[0.13.0,0.14.0)"/>
      <repositoryList
          name="Dependencies">
        <repository
            url="http://download.eclipse.org/releases/mars"/>
        <repository
            url="http://download.eclipse.org/tools/orbit/downloads/drops/R20140525021250/repository/"/>
        <repository
            url="http://download.eclipse.org/modeling/tmf/xtext/updates/composite/releases/"/>
        <repository
            url="http://download.eclipse.org/viatra/updates/integration"/>
      </repositoryList>
    </targlet>
  </setupTask>
  <setupTask
      xsi:type="projects:ProjectsImportTask">
    <sourceLocator
        rootFolder="${git.clone.cps.location}"
        locateNestedProjects="true">
      <predicate
          xsi:type="predicates:NotPredicate">
        <operand
            xsi:type="predicates:OrPredicate">
          <operand
              xsi:type="predicates:LocationPredicate"
              pattern=".*/tests/.*performance.*"/>
          <operand
              xsi:type="predicates:LocationPredicate"
              pattern=".*/releng/.*rcpapplication.*"/>
        </operand>
      </predicate>
    </sourceLocator>
  </setupTask>
  <setupTask
      xsi:type="setup:EclipseIniTask"
      option="-Doomph.redirection.viatra.cps.demo.setup"
      value="=https://raw.githubusercontent.com/IncQueryLabs/incquery-examples-cps/master/releng/org.eclipse.viatra.examples.cps.setup/CPSExample.setup->${git.clone.cps.location|uri}/releng/org.eclipse.viatra.examples.cps.setup/CPSExample.setup"
      vm="true"/>
  <setupTask
      xsi:type="setup:EclipseIniTask"
      option="-Xmx"
      value="2G"
      vm="true"/>
  <setupTask
      xsi:type="setup:EclipseIniTask"
      option="-Xms"
      value="512M"
      vm="true"/>
  <setupTask
      xsi:type="setup:EclipseIniTask"
      option="-XX:MaxPermSize="
      value="256M"
      vm="true"/>
  <project name="mylyn">
    <setupTask
        xsi:type="setup:CompoundTask"
        name="Mylyn">
      <setupTask
          xsi:type="setup:VariableTask"
          id=""
          type="PASSWORD"
          name="github.user.password"
          label="GitHub password for Issues/Pull requests"/>
      <setupTask
          xsi:type="setup:VariableTask"
          name="eiq.cps.demo.milestone"/>
      <setupTask
          xsi:type="setup:VariableTask"
          name="eiq.cps.demo.milestone.id"/>
      <setupTask
          xsi:type="mylyn:MylynQueriesTask"
          connectorKind="github"
          repositoryURL="https://github.com/IncQueryLabs/incquery-examples-cps"
          userID="${github.user.id}"
          password="${github.user.password}">
        <query
            summary="CPS-Demo bugs in ${eiq.cps.demo.milestone}">
          <attribute
              key="milestone"
              value="${eiq.cps.demo.milestone.id}"/>
          <attribute
              key="state"
              value="open::"/>
          <attribute
              key="labels"
              value="bug::"/>
        </query>
        <query
            summary="CPS-Demo features in ${eiq.cps.demo.milestone}"
            url="">
          <attribute
              key="milestone"
              value="${eiq.cps.demo.milestone.id}"/>
          <attribute
              key="state"
              value="open::"/>
          <attribute
              key="labels"
              value="enhancement::"/>
        </query>
        <query
            summary="CPS-Demo resolved in ${eiq.cps.demo.milestone}">
          <attribute
              key="milestone"
              value="${eiq.cps.demo.milestone.id}"/>
          <attribute
              key="state"
              value="closed::"/>
        </query>
      </setupTask>
      <setupTask
          xsi:type="mylyn:MylynQueriesTask"
          connectorKind="githubPullRequests"
          repositoryURL="http://github.com/IncQueryLabs/incquery-examples-cps/pulls"
          userID="${github.user.id}"
          password="${github.user.password}">
        <query
            summary="CPS-Demo pull requests"
            url="">
          <attribute
              key="state"
              value="open::closed::"/>
        </query>
      </setupTask>
      <setupTask
          xsi:type="setup.p2:P2Task">
        <requirement
            name="org.eclipse.mylyn.ide_feature.feature.group"/>
        <requirement
            name="org.eclipse.mylyn.java_feature.feature.group"/>
        <requirement
            name="org.eclipse.mylyn.pde_feature.feature.group"/>
        <requirement
            name="org.eclipse.mylyn.team_feature.feature.group"/>
        <requirement
            name="org.eclipse.mylyn_feature.feature.group"/>
        <requirement
            name="org.eclipse.mylyn.git.feature.group"/>
        <requirement
            name="org.eclipse.mylyn.github.feature.feature.group"/>
        <requirement
            name="org.eclipse.egit.mylyn.feature.group"/>
        <repository
            url="http://download.eclipse.org/releases/mars"/>
      </setupTask>
    </setupTask>
    <stream
        name="master">
      <setupTask
          xsi:type="setup:VariableTask"
          name="eiq.cps.demo.milestone"
          value="0.1.0"
          defaultValue=""/>
      <setupTask
          xsi:type="setup:VariableTask"
          name="eiq.cps.demo.milestone.id"
          value="1"
          defaultValue=""/>
    </stream>
  </project>
  <project name="Performance testing">
    <setupTask
        xsi:type="setup.targlets:TargletTask">
      <targlet
          name="MONDO-SAM">
        <requirement
            name="org.apache.commons.io"/>
        <requirement
            name="org.codehaus.jackson.core"/>
        <requirement
            name="org.codehaus.jackson.mapper"/>
        <repositoryList
            name="Dependencies">
          <repository
              url="http://download.eclipse.org/tools/orbit/downloads/drops/R20140525021250/repository/"/>
        </repositoryList>
      </targlet>
    </setupTask>
    <setupTask
        xsi:type="git:GitCloneTask"
        id="git.clone.mondosam"
        remoteURI="FTSRG/mondo-sam"
        pushURI="">
      <annotation
          source="http://www.eclipse.org/oomph/setup/InducedChoices">
        <detail
            key="inherit">
          <value>github.remoteURIs</value>
        </detail>
        <detail
            key="label">
          <value>MONDO-SAM Github repository</value>
        </detail>
        <detail
            key="target">
          <value>remoteURI</value>
        </detail>
      </annotation>
      <description>${scope.project.label}</description>
    </setupTask>
    <setupTask
        xsi:type="projects:ProjectsImportTask">
      <sourceLocator
          rootFolder="${git.clone.mondosam.location}"
          locateNestedProjects="true"/>
      <sourceLocator
          rootFolder="${git.clone.cps.location}"
          locateNestedProjects="true"/>
    </setupTask>
    <stream
        name="0.1-maintenance"/>
  </project>
  <stream name="master">
    <setupTask
        xsi:type="setup.workingsets:WorkingSetTask">
      <workingSet
          name="CPS Domains">
        <predicate
            xsi:type="predicates:LocationPredicate"
            pattern=".*/domains/.*"/>
      </workingSet>
      <workingSet
          name="CPS Queries">
        <predicate
            xsi:type="predicates:LocationPredicate"
            pattern=".*/queries/.*"/>
      </workingSet>
      <workingSet
          name="CPS Transformations">
        <predicate
            xsi:type="predicates:LocationPredicate"
            pattern=".*/transformations/.*"/>
      </workingSet>
      <workingSet
          name="CPS Tests">
        <predicate
            xsi:type="predicates:LocationPredicate"
            pattern=".*/tests/.*"/>
      </workingSet>
      <workingSet
          name="CPS Addons">
        <predicate
            xsi:type="predicates:LocationPredicate"
            pattern=".*/addons/.*"/>
      </workingSet>
      <workingSet
          name="CPS Generator">
        <predicate
            xsi:type="predicates:LocationPredicate"
            pattern=".*/generator/.*"/>
      </workingSet>
      <workingSet
          name="CPS Prototypes">
        <predicate
            xsi:type="predicates:LocationPredicate"
            pattern=".*/prototypes/.*"/>
      </workingSet>
    </setupTask>
  </stream>
  <logicalProjectContainer
      xsi:type="setup:ProjectCatalog"
      href="index:/org.eclipse.setup#//@projectCatalogs[name='org.eclipse']"/>
  <description>VIATRA CPS Demo provides a full example set for many extensions and use cases of the VIATRA framework.</description>
</setup:Project>
